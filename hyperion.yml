version: "3.3"

networks:
  net:
    driver: overlay
    attachable: true
    external:
      name: hyperion-net

volumes:
    prometheus: {}
    grafana: {}
    alertmanager: {}

configs:
  node_rules:
    file: ./prometheus/rules/node.rules.yml
  task_rules:
    file: ./prometheus/rules/task.rules.yml

services:
  traefik:
    image: traefik:v1.7.12-alpine
    command: >
      --api
      --docker
      --docker.watch
      --docker.swarmMode
      --docker.domain=docker
      --docker.exposedbydefault=false
    ports:
      - 8888:80
    networks:
      - net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.port=8080
        - traefik.docker.network=net
        - traefik.backend=traefik
        - traefik.frontend.rule=PathPrefixStrip:/traefik/

  cadvisor:
    image: google/cadvisor
    networks:
      - net
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  unsee:
    image: cloudflare/unsee
    networks:
      - net
    environment:
      - "ALERTMANAGER_URIS=default:http://alertmanager:9093"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.port=8080
        - traefik.docker.network=net
        - traefik.backend=unsee
        - traefik.frontend.rule=PathPrefixStrip:/unsee/

  grafana:
    image: kunaldawn/hyperion-grafana
    networks:
      - net
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.port=3000
        - traefik.docker.network=net
        - traefik.backend=grafana
        - traefik.backend.loadbalancer.sticky=true
        - traefik.frontend.rule=PathPrefixStrip:/grafana/
 
  alertmanager:
    image: kunaldawn/hyperion-alertmanager
    networks:
      - net
    environment:
      - SLACK_URL=${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
      - SLACK_CHANNEL=${SLACK_CHANNEL:-general}
      - SLACK_USER=${SLACK_USER:-alertmanager}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - alertmanager:/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.port=9093
        - traefik.docker.network=net
        - traefik.backend=alertmanager
        - traefik.frontend.rule=PathPrefixStrip:/alertmanager/

  node-exporter:
    image: kunaldawn/hyperion-node-exporter
    networks:
      - net
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    image: kunaldawn/hyperion-prometheus
    networks:
      - net
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=${PROMETHEUS_RETENTION:-24h}'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/node.rules.yml
      - source: task_rules
        target: /etc/prometheus/task.rules.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
      labels:
        - traefik.enable=true
        - traefik.port=9093
        - traefik.docker.network=net
        - traefik.backend=prometheus
        - traefik.frontend.rule=PathPrefixStrip:/prometheus/
